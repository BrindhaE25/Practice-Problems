public class Blackjack {

    public int parseCard(String card) {
        switch(card) {
            case "ace" : return 11;
                        //break;
            case "two" : return 2;
                        //break;
            case "three" : return 3;
                        //break;
            case "four" : return 4;
                        //break;
            case "five" : return 5;
                        //break;
            case "six" : return 6;
                        //break;
            case "seven" : return 7;
                        //break;
            case "eight" : return 8;
                        //break;
            case "nine" : return 9;
                        //break;
            case "ten" : return 10;
                        //break;
            case "jack" : return 10;
                        //break;
            case "queen" : return 10;
                        //break;
            case "king" : return 10;
                       // break;
            default : return 0;
                        //break;
        }
        //return 0;
    }

    public boolean isBlackjack(String card1, String card2) {
        int value1 = parseCard(card1);
        int value2 = parseCard(card2);
        if(value1 + value2 == 21)
            return true;
        else
            return false;
    }

    public String largeHand(boolean isBlackjack, int dealerScore) {
        if(dealerScore == 22)
            return "P";
        else if(isBlackjack && dealerScore - 10 >= 0)
            return "S";
        else if(isBlackjack && dealerScore - 10 < 0)
            return "W";
        else
            return "P";
    }

    public String smallHand(int handScore, int dealerScore) {
        if(handScore >= 17)
            return "S";
        else if(handScore <= 11)
            return "H";
        else if(handScore >= 12 && handScore <= 16 && dealerScore < 7)
            return "S";
        else
            return "H";
    }

    // FirstTurn returns the semi-optimal decision for the first turn, given the cards of the player and the dealer.
    // This function is already implemented and does not need to be edited. It pulls the other functions together in a
    // complete decision tree for the first turn.
    public String firstTurn(String card1, String card2, String dealerCard) {
        int handScore = parseCard(card1) + parseCard(card2);
        int dealerScore = parseCard(dealerCard);

        if (20 < handScore) {
            return largeHand(isBlackjack(card1, card2), dealerScore);
        } else {
            return smallHand(handScore, dealerScore);
        }
    }
}
